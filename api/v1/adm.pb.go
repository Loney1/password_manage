// protobuf generated code shouldn't be here. consider add a script or a flag in main

// generated xx.pb.go:
// protoc -I . adm.proto --go_out=plugins=grpc:.
//
// generated xx.validator.pb.go:
// 1.安装工具protoc-gen-govalidators: go install github.com/mwitkow/go-proto-validators
// 2.编译proto: protoc --proto_path=$GOPATH/src -I/$ADM_BACKEND_SRC:. --govalidators_out=:. --go_out=plugins=grpc:. adm.proto
// 说明: 上述路径$ADM_BACKEND_SRC是下面import导入的根目录位置（adm_backend） --proto_path指定引用的proto路径

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: adm.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//登录登出
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	TotpCode string `protobuf:"bytes,3,opt,name=TotpCode,proto3" json:"TotpCode,omitempty"` //二次认证
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginReq) GetTotpCode() string {
	if x != nil {
		return x.TotpCode
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	PassStrength  string `protobuf:"bytes,3,opt,name=passStrength,proto3" json:"passStrength,omitempty"` //密码强度
	Mobile        string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email         string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Remark        string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	Token         string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	HasMfa        bool   `protobuf:"varint,8,opt,name=HasMfa,proto3" json:"HasMfa,omitempty"`                //二次认证
	Role          string `protobuf:"bytes,9,opt,name=role,proto3" json:"role,omitempty"`                     //用户角色
	Pri           int32  `protobuf:"varint,10,opt,name=pri,proto3" json:"pri,omitempty"`                     //权限类别
	NeedChangePwd bool   `protobuf:"varint,11,opt,name=needChangePwd,proto3" json:"needChangePwd,omitempty"` //是否需要二次修改密码
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{1}
}

func (x *LoginReply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginReply) GetPassStrength() string {
	if x != nil {
		return x.PassStrength
	}
	return ""
}

func (x *LoginReply) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *LoginReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReply) GetHasMfa() bool {
	if x != nil {
		return x.HasMfa
	}
	return false
}

func (x *LoginReply) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *LoginReply) GetPri() int32 {
	if x != nil {
		return x.Pri
	}
	return 0
}

func (x *LoginReply) GetNeedChangePwd() bool {
	if x != nil {
		return x.NeedChangePwd
	}
	return false
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{2}
}

func (x *LogoutReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type LogoutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LogoutReply) Reset() {
	*x = LogoutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReply) ProtoMessage() {}

func (x *LogoutReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReply.ProtoReflect.Descriptor instead.
func (*LogoutReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{3}
}

func (x *LogoutReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

//用户信息增删改查
type ModelPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIdx  int32 `protobuf:"varint,1,opt,name=pageIdx,proto3" json:"pageIdx,omitempty"`   // start index with 1
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // if pageSize is -1, we will return all nodes
	Total    int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`       // the total number of records
}

func (x *ModelPage) Reset() {
	*x = ModelPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelPage) ProtoMessage() {}

func (x *ModelPage) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelPage.ProtoReflect.Descriptor instead.
func (*ModelPage) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{4}
}

func (x *ModelPage) GetPageIdx() int32 {
	if x != nil {
		return x.PageIdx
	}
	return 0
}

func (x *ModelPage) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ModelPage) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageIndex int32  `protobuf:"varint,2,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	Search    string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`  // 模糊匹配字段
	IsSelf    bool   `protobuf:"varint,4,opt,name=isSelf,proto3" json:"isSelf,omitempty"` // 查询个人信息True,查询子用户列表false
}

func (x *ListUserReq) Reset() {
	*x = ListUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReq) ProtoMessage() {}

func (x *ListUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReq.ProtoReflect.Descriptor instead.
func (*ListUserReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ListUserReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListUserReq) GetIsSelf() bool {
	if x != nil {
		return x.IsSelf
	}
	return false
}

type ListUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *ModelPage               `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	List      []*ListUserReply_Details `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	Exhausted bool                     `protobuf:"varint,3,opt,name=exhausted,proto3" json:"exhausted,omitempty"` // if this is last page
}

func (x *ListUserReply) Reset() {
	*x = ListUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply) ProtoMessage() {}

func (x *ListUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply.ProtoReflect.Descriptor instead.
func (*ListUserReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserReply) GetPage() *ModelPage {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListUserReply) GetList() []*ListUserReply_Details {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListUserReply) GetExhausted() bool {
	if x != nil {
		return x.Exhausted
	}
	return false
}

type UpdateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Passwd   string `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Mobile   string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email    string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Remark   string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateUserReq) Reset() {
	*x = UpdateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReq) ProtoMessage() {}

func (x *UpdateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReq.ProtoReflect.Descriptor instead.
func (*UpdateUserReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserReq) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *UpdateUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *UpdateUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //返回更新成功或失败
}

func (x *UpdateUserReply) Reset() {
	*x = UpdateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReply) ProtoMessage() {}

func (x *UpdateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReply.ProtoReflect.Descriptor instead.
func (*UpdateUserReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUserReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //返回删除成功或失败
}

func (x *DeleteUserReply) Reset() {
	*x = DeleteUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReply) ProtoMessage() {}

func (x *DeleteUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReply.ProtoReflect.Descriptor instead.
func (*DeleteUserReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteUserReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type AddUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role       string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"` //
	UserName   string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	Passwd     string `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Mobile     string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email      string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Remark     string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`         //备注
	Address    string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`       //所在地
	RealName   string `protobuf:"bytes,8,opt,name=realName,proto3" json:"realName,omitempty"`     //真实姓名
	Department string `protobuf:"bytes,9,opt,name=department,proto3" json:"department,omitempty"` //部门
	Post       string `protobuf:"bytes,10,opt,name=post,proto3" json:"post,omitempty"`            //岗位
}

func (x *AddUserReq) Reset() {
	*x = AddUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReq) ProtoMessage() {}

func (x *AddUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReq.ProtoReflect.Descriptor instead.
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{11}
}

func (x *AddUserReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AddUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUserReq) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *AddUserReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AddUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddUserReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddUserReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *AddUserReq) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *AddUserReq) GetPost() string {
	if x != nil {
		return x.Post
	}
	return ""
}

type AddUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddUserReply) Reset() {
	*x = AddUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserReply) ProtoMessage() {}

func (x *AddUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserReply.ProtoReflect.Descriptor instead.
func (*AddUserReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{12}
}

func (x *AddUserReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

//日志审计
type ListAuditLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start index with 1.
	PageIdx int32 `protobuf:"varint,1,opt,name=pageIdx,proto3" json:"pageIdx,omitempty"`
	// if pageSize is -1, we will return all pods.
	PageSize    int32    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTm     string   `protobuf:"bytes,4,opt,name=startTm,proto3" json:"startTm,omitempty"`         // 开始时间
	EndTm       string   `protobuf:"bytes,5,opt,name=endTm,proto3" json:"endTm,omitempty"`             // 结束时间
	Keyword     string   `protobuf:"bytes,6,opt,name=keyword,proto3" json:"keyword,omitempty"`         // 模糊查询
	FilterEvent []string `protobuf:"bytes,7,rep,name=filterEvent,proto3" json:"filterEvent,omitempty"` // 事件
}

func (x *ListAuditLogReq) Reset() {
	*x = ListAuditLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogReq) ProtoMessage() {}

func (x *ListAuditLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogReq.ProtoReflect.Descriptor instead.
func (*ListAuditLogReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{13}
}

func (x *ListAuditLogReq) GetPageIdx() int32 {
	if x != nil {
		return x.PageIdx
	}
	return 0
}

func (x *ListAuditLogReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAuditLogReq) GetStartTm() string {
	if x != nil {
		return x.StartTm
	}
	return ""
}

func (x *ListAuditLogReq) GetEndTm() string {
	if x != nil {
		return x.EndTm
	}
	return ""
}

func (x *ListAuditLogReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ListAuditLogReq) GetFilterEvent() []string {
	if x != nil {
		return x.FilterEvent
	}
	return nil
}

type ListAuditLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *ModelPage                   `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	List      []*ListAuditLogReply_Details `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	Exhausted bool                         `protobuf:"varint,3,opt,name=exhausted,proto3" json:"exhausted,omitempty"` // if this is last page
}

func (x *ListAuditLogReply) Reset() {
	*x = ListAuditLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogReply) ProtoMessage() {}

func (x *ListAuditLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogReply.ProtoReflect.Descriptor instead.
func (*ListAuditLogReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{14}
}

func (x *ListAuditLogReply) GetPage() *ModelPage {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListAuditLogReply) GetList() []*ListAuditLogReply_Details {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListAuditLogReply) GetExhausted() bool {
	if x != nil {
		return x.Exhausted
	}
	return false
}

type ListMachineNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIdx    int32  `protobuf:"varint,1,opt,name=pageIdx,proto3" json:"pageIdx,omitempty"`
	PageSize   int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SearchName string `protobuf:"bytes,3,opt,name=searchName,proto3" json:"searchName,omitempty"` // 主机名
	StartTime  string `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`   // 开始时间
	EndTime    string `protobuf:"bytes,5,opt,name=endTime,proto3" json:"endTime,omitempty"`       // 结束时间
	SortTime   int32  `protobuf:"varint,6,opt,name=sortTime,proto3" json:"sortTime,omitempty"`
}

func (x *ListMachineNameReq) Reset() {
	*x = ListMachineNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineNameReq) ProtoMessage() {}

func (x *ListMachineNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineNameReq.ProtoReflect.Descriptor instead.
func (*ListMachineNameReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{15}
}

func (x *ListMachineNameReq) GetPageIdx() int32 {
	if x != nil {
		return x.PageIdx
	}
	return 0
}

func (x *ListMachineNameReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMachineNameReq) GetSearchName() string {
	if x != nil {
		return x.SearchName
	}
	return ""
}

func (x *ListMachineNameReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ListMachineNameReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ListMachineNameReq) GetSortTime() int32 {
	if x != nil {
		return x.SortTime
	}
	return 0
}

type ListMachineNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListMachineNameReply_Details `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Page *ModelPage                      `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListMachineNameReply) Reset() {
	*x = ListMachineNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineNameReply) ProtoMessage() {}

func (x *ListMachineNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineNameReply.ProtoReflect.Descriptor instead.
func (*ListMachineNameReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{16}
}

func (x *ListMachineNameReply) GetList() []*ListMachineNameReply_Details {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListMachineNameReply) GetPage() *ModelPage {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetMachinePwdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HasMfa string `protobuf:"bytes,2,opt,name=hasMfa,proto3" json:"hasMfa,omitempty"` //二次认证
}

func (x *GetMachinePwdReq) Reset() {
	*x = GetMachinePwdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachinePwdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachinePwdReq) ProtoMessage() {}

func (x *GetMachinePwdReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachinePwdReq.ProtoReflect.Descriptor instead.
func (*GetMachinePwdReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{17}
}

func (x *GetMachinePwdReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMachinePwdReq) GetHasMfa() string {
	if x != nil {
		return x.HasMfa
	}
	return ""
}

type GetMachinePwdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachinePwd string `protobuf:"bytes,1,opt,name=machinePwd,proto3" json:"machinePwd,omitempty"` //显示当前密码和上次密码
	LastPwd    string `protobuf:"bytes,2,opt,name=lastPwd,proto3" json:"lastPwd,omitempty"`
}

func (x *GetMachinePwdReply) Reset() {
	*x = GetMachinePwdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachinePwdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachinePwdReply) ProtoMessage() {}

func (x *GetMachinePwdReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachinePwdReply.ProtoReflect.Descriptor instead.
func (*GetMachinePwdReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{18}
}

func (x *GetMachinePwdReply) GetMachinePwd() string {
	if x != nil {
		return x.MachinePwd
	}
	return ""
}

func (x *GetMachinePwdReply) GetLastPwd() string {
	if x != nil {
		return x.LastPwd
	}
	return ""
}

type UpdateMachineRemarkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Remark string `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *UpdateMachineRemarkReq) Reset() {
	*x = UpdateMachineRemarkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineRemarkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineRemarkReq) ProtoMessage() {}

func (x *UpdateMachineRemarkReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineRemarkReq.ProtoReflect.Descriptor instead.
func (*UpdateMachineRemarkReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateMachineRemarkReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMachineRemarkReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateMachineRemarkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` //点击修改备注后，备注列表变为可编辑样式(后面有√，×两个图片选项
}

func (x *UpdateMachineRemarkReply) Reset() {
	*x = UpdateMachineRemarkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineRemarkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineRemarkReply) ProtoMessage() {}

func (x *UpdateMachineRemarkReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineRemarkReply.ProtoReflect.Descriptor instead.
func (*UpdateMachineRemarkReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateMachineRemarkReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

//域管理
type ListDomainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIdx int32 `protobuf:"varint,1,opt,name=pageIdx,proto3" json:"pageIdx,omitempty"`
	// if pageSize is -1, we will return all pods.
	PageSize      int32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	FilterDomain  string `protobuf:"bytes,3,opt,name=filterDomain,proto3" json:"filterDomain,omitempty"`   // 根据所在域筛选
	FilterStatus  string `protobuf:"bytes,4,opt,name=filterStatus,proto3" json:"filterStatus,omitempty"`   // 根据域状态筛选
	FilterKeyword string `protobuf:"bytes,5,opt,name=filterKeyword,proto3" json:"filterKeyword,omitempty"` // 根据关键词搜索
}

func (x *ListDomainReq) Reset() {
	*x = ListDomainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainReq) ProtoMessage() {}

func (x *ListDomainReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainReq.ProtoReflect.Descriptor instead.
func (*ListDomainReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{21}
}

func (x *ListDomainReq) GetPageIdx() int32 {
	if x != nil {
		return x.PageIdx
	}
	return 0
}

func (x *ListDomainReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDomainReq) GetFilterDomain() string {
	if x != nil {
		return x.FilterDomain
	}
	return ""
}

func (x *ListDomainReq) GetFilterStatus() string {
	if x != nil {
		return x.FilterStatus
	}
	return ""
}

func (x *ListDomainReq) GetFilterKeyword() string {
	if x != nil {
		return x.FilterKeyword
	}
	return ""
}

type ListDomainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      *ModelPage                 `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	List      []*ListDomainReply_Details `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
	Exhausted bool                       `protobuf:"varint,3,opt,name=exhausted,proto3" json:"exhausted,omitempty"` // if this is last page
}

func (x *ListDomainReply) Reset() {
	*x = ListDomainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainReply) ProtoMessage() {}

func (x *ListDomainReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainReply.ProtoReflect.Descriptor instead.
func (*ListDomainReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{22}
}

func (x *ListDomainReply) GetPage() *ModelPage {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListDomainReply) GetList() []*ListDomainReply_Details {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListDomainReply) GetExhausted() bool {
	if x != nil {
		return x.Exhausted
	}
	return false
}

type AddDomainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LdapAddr string `protobuf:"bytes,1,opt,name=ldapAddr,proto3" json:"ldapAddr,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	DNS      string `protobuf:"bytes,4,opt,name=DNS,proto3" json:"DNS,omitempty"`
}

func (x *AddDomainReq) Reset() {
	*x = AddDomainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDomainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDomainReq) ProtoMessage() {}

func (x *AddDomainReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDomainReq.ProtoReflect.Descriptor instead.
func (*AddDomainReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{23}
}

func (x *AddDomainReq) GetLdapAddr() string {
	if x != nil {
		return x.LdapAddr
	}
	return ""
}

func (x *AddDomainReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddDomainReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddDomainReq) GetDNS() string {
	if x != nil {
		return x.DNS
	}
	return ""
}

type AddDomainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddDomainReply) Reset() {
	*x = AddDomainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDomainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDomainReply) ProtoMessage() {}

func (x *AddDomainReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDomainReply.ProtoReflect.Descriptor instead.
func (*AddDomainReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{24}
}

func (x *AddDomainReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type TestDomainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LdapAddr string `protobuf:"bytes,1,opt,name=ldapAddr,proto3" json:"ldapAddr,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	DNS      string `protobuf:"bytes,4,opt,name=DNS,proto3" json:"DNS,omitempty"`
}

func (x *TestDomainReq) Reset() {
	*x = TestDomainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDomainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDomainReq) ProtoMessage() {}

func (x *TestDomainReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDomainReq.ProtoReflect.Descriptor instead.
func (*TestDomainReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{25}
}

func (x *TestDomainReq) GetLdapAddr() string {
	if x != nil {
		return x.LdapAddr
	}
	return ""
}

func (x *TestDomainReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TestDomainReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *TestDomainReq) GetDNS() string {
	if x != nil {
		return x.DNS
	}
	return ""
}

type TestDomainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"` // 1为成功，0为失败，
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`        // 错误信息
}

func (x *TestDomainReply) Reset() {
	*x = TestDomainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDomainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDomainReply) ProtoMessage() {}

func (x *TestDomainReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDomainReply.ProtoReflect.Descriptor instead.
func (*TestDomainReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{26}
}

func (x *TestDomainReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TestDomainReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateDomainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	LdapAddr string `protobuf:"bytes,2,opt,name=ldapAddr,proto3" json:"ldapAddr,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	DNS      string `protobuf:"bytes,5,opt,name=DNS,proto3" json:"DNS,omitempty"`
}

func (x *UpdateDomainReq) Reset() {
	*x = UpdateDomainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainReq) ProtoMessage() {}

func (x *UpdateDomainReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainReq.ProtoReflect.Descriptor instead.
func (*UpdateDomainReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateDomainReq) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateDomainReq) GetLdapAddr() string {
	if x != nil {
		return x.LdapAddr
	}
	return ""
}

func (x *UpdateDomainReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateDomainReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateDomainReq) GetDNS() string {
	if x != nil {
		return x.DNS
	}
	return ""
}

type UpdateDomainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateDomainReply) Reset() {
	*x = UpdateDomainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainReply) ProtoMessage() {}

func (x *UpdateDomainReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainReply.ProtoReflect.Descriptor instead.
func (*UpdateDomainReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateDomainReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DeleteDomainReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *DeleteDomainReq) Reset() {
	*x = DeleteDomainReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainReq) ProtoMessage() {}

func (x *DeleteDomainReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainReq.ProtoReflect.Descriptor instead.
func (*DeleteDomainReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteDomainReq) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *DeleteDomainReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteDomainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DeleteDomainReply) Reset() {
	*x = DeleteDomainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainReply) ProtoMessage() {}

func (x *DeleteDomainReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainReply.ProtoReflect.Descriptor instead.
func (*DeleteDomainReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteDomainReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// 会话时间
type ChangeDailTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 值 20|10|1
}

func (x *ChangeDailTimeReq) Reset() {
	*x = ChangeDailTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDailTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDailTimeReq) ProtoMessage() {}

func (x *ChangeDailTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDailTimeReq.ProtoReflect.Descriptor instead.
func (*ChangeDailTimeReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{31}
}

func (x *ChangeDailTimeReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ChangeDailTimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DailTime int32 `protobuf:"varint,1,opt,name=DailTime,proto3" json:"DailTime,omitempty"`
}

func (x *ChangeDailTimeReply) Reset() {
	*x = ChangeDailTimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDailTimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDailTimeReply) ProtoMessage() {}

func (x *ChangeDailTimeReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDailTimeReply.ProtoReflect.Descriptor instead.
func (*ChangeDailTimeReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{32}
}

func (x *ChangeDailTimeReply) GetDailTime() int32 {
	if x != nil {
		return x.DailTime
	}
	return 0
}

// 二次认证
type CheckMfaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CheckMfaReq) Reset() {
	*x = CheckMfaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMfaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMfaReq) ProtoMessage() {}

func (x *CheckMfaReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMfaReq.ProtoReflect.Descriptor instead.
func (*CheckMfaReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{33}
}

func (x *CheckMfaReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CheckMfaReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CheckMfaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMfa bool `protobuf:"varint,1,opt,name=hasMfa,proto3" json:"hasMfa,omitempty"`
}

func (x *CheckMfaReply) Reset() {
	*x = CheckMfaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMfaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMfaReply) ProtoMessage() {}

func (x *CheckMfaReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMfaReply.ProtoReflect.Descriptor instead.
func (*CheckMfaReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{34}
}

func (x *CheckMfaReply) GetHasMfa() bool {
	if x != nil {
		return x.HasMfa
	}
	return false
}

type EnableMfaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Secret   string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	MfaCode  string `protobuf:"bytes,4,opt,name=mfaCode,proto3" json:"mfaCode,omitempty"`
}

func (x *EnableMfaReq) Reset() {
	*x = EnableMfaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableMfaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableMfaReq) ProtoMessage() {}

func (x *EnableMfaReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableMfaReq.ProtoReflect.Descriptor instead.
func (*EnableMfaReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{35}
}

func (x *EnableMfaReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EnableMfaReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *EnableMfaReq) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *EnableMfaReq) GetMfaCode() string {
	if x != nil {
		return x.MfaCode
	}
	return ""
}

type EnableMfaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // SUCCESS || FAILED
}

func (x *EnableMfaReply) Reset() {
	*x = EnableMfaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableMfaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableMfaReply) ProtoMessage() {}

func (x *EnableMfaReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableMfaReply.ProtoReflect.Descriptor instead.
func (*EnableMfaReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{36}
}

func (x *EnableMfaReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type DisableMfaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *DisableMfaReq) Reset() {
	*x = DisableMfaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableMfaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableMfaReq) ProtoMessage() {}

func (x *DisableMfaReq) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableMfaReq.ProtoReflect.Descriptor instead.
func (*DisableMfaReq) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{37}
}

func (x *DisableMfaReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type DisableMfaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"` // SUCCESS || FAILED
}

func (x *DisableMfaReply) Reset() {
	*x = DisableMfaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableMfaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableMfaReply) ProtoMessage() {}

func (x *DisableMfaReply) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableMfaReply.ProtoReflect.Descriptor instead.
func (*DisableMfaReply) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{38}
}

func (x *DisableMfaReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ListUserReply_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName     string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`         //用户名
	Passwd       string `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`             //密码
	Mobile       string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`             //手机号
	Email        string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`               //邮箱
	Remark       string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`             //备注
	PassStrength string `protobuf:"bytes,7,opt,name=passStrength,proto3" json:"passStrength,omitempty"` //密码强度：high/middle/low
	HasMfa       bool   `protobuf:"varint,8,opt,name=hasMfa,proto3" json:"hasMfa,omitempty"`            //是否开启二次认证
	UpdateTm     string `protobuf:"bytes,9,opt,name=updateTm,proto3" json:"updateTm,omitempty"`         //密码更新时间时间
	Pri          int32  `protobuf:"varint,10,opt,name=pri,proto3" json:"pri,omitempty"`                 // 权限类别: 1:super 2:admin 3:guest
	CreateTM     string `protobuf:"bytes,11,opt,name=createTM,proto3" json:"createTM,omitempty"`        //创建时间
	Role         string `protobuf:"bytes,12,opt,name=role,proto3" json:"role,omitempty"`                //用户角色: mgr|dev|ops|sec
	Address      string `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`          // 所在地
	RealName     string `protobuf:"bytes,14,opt,name=realName,proto3" json:"realName,omitempty"`        // 真实姓名
	Department   string `protobuf:"bytes,15,opt,name=department,proto3" json:"department,omitempty"`    //部门
	Post         string `protobuf:"bytes,16,opt,name=post,proto3" json:"post,omitempty"`                //岗位
}

func (x *ListUserReply_Details) Reset() {
	*x = ListUserReply_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReply_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply_Details) ProtoMessage() {}

func (x *ListUserReply_Details) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply_Details.ProtoReflect.Descriptor instead.
func (*ListUserReply_Details) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ListUserReply_Details) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListUserReply_Details) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListUserReply_Details) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *ListUserReply_Details) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ListUserReply_Details) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListUserReply_Details) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListUserReply_Details) GetPassStrength() string {
	if x != nil {
		return x.PassStrength
	}
	return ""
}

func (x *ListUserReply_Details) GetHasMfa() bool {
	if x != nil {
		return x.HasMfa
	}
	return false
}

func (x *ListUserReply_Details) GetUpdateTm() string {
	if x != nil {
		return x.UpdateTm
	}
	return ""
}

func (x *ListUserReply_Details) GetPri() int32 {
	if x != nil {
		return x.Pri
	}
	return 0
}

func (x *ListUserReply_Details) GetCreateTM() string {
	if x != nil {
		return x.CreateTM
	}
	return ""
}

func (x *ListUserReply_Details) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ListUserReply_Details) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListUserReply_Details) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ListUserReply_Details) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *ListUserReply_Details) GetPost() string {
	if x != nil {
		return x.Post
	}
	return ""
}

type ListAuditLogReply_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	LoginUser   string `protobuf:"bytes,2,opt,name=loginUser,proto3" json:"loginUser,omitempty"`
	SourceIp    string `protobuf:"bytes,3,opt,name=sourceIp,proto3" json:"sourceIp,omitempty"`
	Event       string `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	EventArgs   string `protobuf:"bytes,5,opt,name=eventArgs,proto3" json:"eventArgs,omitempty"`
	EventResult string `protobuf:"bytes,6,opt,name=eventResult,proto3" json:"eventResult,omitempty"`
	CreateTm    string `protobuf:"bytes,7,opt,name=CreateTm,proto3" json:"CreateTm,omitempty"`
	String_     int32  `protobuf:"varint,8,opt,name=string,proto3" json:"string,omitempty"`
}

func (x *ListAuditLogReply_Details) Reset() {
	*x = ListAuditLogReply_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogReply_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogReply_Details) ProtoMessage() {}

func (x *ListAuditLogReply_Details) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogReply_Details.ProtoReflect.Descriptor instead.
func (*ListAuditLogReply_Details) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{14, 0}
}

func (x *ListAuditLogReply_Details) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetLoginUser() string {
	if x != nil {
		return x.LoginUser
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetEventArgs() string {
	if x != nil {
		return x.EventArgs
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetEventResult() string {
	if x != nil {
		return x.EventResult
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetCreateTm() string {
	if x != nil {
		return x.CreateTm
	}
	return ""
}

func (x *ListAuditLogReply_Details) GetString_() int32 {
	if x != nil {
		return x.String_
	}
	return 0
}

type ListMachineNameReply_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HostName string `protobuf:"bytes,2,opt,name=hostName,proto3" json:"hostName,omitempty"`
	Dn       string `protobuf:"bytes,3,opt,name=dn,proto3" json:"dn,omitempty"`
	ExTime   string `protobuf:"bytes,4,opt,name=exTime,proto3" json:"exTime,omitempty"`
	Remark   string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ListMachineNameReply_Details) Reset() {
	*x = ListMachineNameReply_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineNameReply_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineNameReply_Details) ProtoMessage() {}

func (x *ListMachineNameReply_Details) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineNameReply_Details.ProtoReflect.Descriptor instead.
func (*ListMachineNameReply_Details) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ListMachineNameReply_Details) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMachineNameReply_Details) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ListMachineNameReply_Details) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

func (x *ListMachineNameReply_Details) GetExTime() string {
	if x != nil {
		return x.ExTime
	}
	return ""
}

func (x *ListMachineNameReply_Details) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ListDomainReply_Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DcHostname string            `protobuf:"bytes,3,opt,name=dcHostname,proto3" json:"dcHostname,omitempty"`
	Status     string            `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	DomainInfo map[string]string `protobuf:"bytes,5,rep,name=domainInfo,proto3" json:"domainInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreateTm   string            `protobuf:"bytes,6,opt,name=createTm,proto3" json:"createTm,omitempty"`
	ErrMsg     string            `protobuf:"bytes,7,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *ListDomainReply_Details) Reset() {
	*x = ListDomainReply_Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adm_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainReply_Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainReply_Details) ProtoMessage() {}

func (x *ListDomainReply_Details) ProtoReflect() protoreflect.Message {
	mi := &file_adm_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainReply_Details.ProtoReflect.Descriptor instead.
func (*ListDomainReply_Details) Descriptor() ([]byte, []int) {
	return file_adm_proto_rawDescGZIP(), []int{22, 0}
}

func (x *ListDomainReply_Details) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ListDomainReply_Details) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDomainReply_Details) GetDcHostname() string {
	if x != nil {
		return x.DcHostname
	}
	return ""
}

func (x *ListDomainReply_Details) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListDomainReply_Details) GetDomainInfo() map[string]string {
	if x != nil {
		return x.DomainInfo
	}
	return nil
}

func (x *ListDomainReply_Details) GetCreateTm() string {
	if x != nil {
		return x.CreateTm
	}
	return ""
}

func (x *ListDomainReply_Details) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_adm_proto protoreflect.FileDescriptor

var file_adm_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x64, 0x6d,
	0x22, 0x5e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x9c, 0x02, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x61, 0x73, 0x73, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x61, 0x73, 0x4d, 0x66, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x48, 0x61, 0x73,
	0x4d, 0x66, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x72, 0x69, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x72, 0x69, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x22,
	0x27, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x57, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x77, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53,
	0x65, 0x6c, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6c,
	0x66, 0x22, 0xa3, 0x04, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x68, 0x61, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x68, 0x61,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x1a, 0x9f, 0x03, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x53, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x4d, 0x66,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x4d, 0x66, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x72, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x72, 0x69, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x4d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x4d, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x29, 0x0a, 0x0f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x29, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x02, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x22, 0x26, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6e, 0x64, 0x54, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e,
	0x64, 0x54, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0xe9, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x65, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x1a, 0xdd, 0x01, 0x0a, 0x07,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xbe, 0x01, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe8, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x1a, 0x75, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x61, 0x73, 0x4d, 0x66, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x73,
	0x4d, 0x66, 0x61, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x50, 0x77, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x77, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73,
	0x74, 0x50, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74,
	0x50, 0x77, 0x64, 0x22, 0x40, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x32, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0xae, 0x03, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x68,
	0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x78,
	0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x1a, 0xa6, 0x02, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x63, 0x48, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x63, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x4c, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x1a, 0x3d, 0x0a, 0x0f, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x74, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x64, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x64, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x4e, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x44, 0x4e, 0x53, 0x22, 0x28, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x75, 0x0a, 0x0d, 0x54, 0x65, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x64, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x64, 0x61, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x4e, 0x53, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x44, 0x4e, 0x53, 0x22, 0x3b, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x64, 0x61, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x64, 0x61, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x44, 0x4e, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x44, 0x4e, 0x53, 0x22, 0x2b,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x35, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x23, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44,
	0x61, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4d, 0x66, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27,
	0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x66, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x4d, 0x66, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x68, 0x61, 0x73, 0x4d, 0x66, 0x61, 0x22, 0x6c, 0x0a, 0x0c, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x66, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x66, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x66,
	0x61, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x0e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x66, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x2b, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x66, 0x61, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0f,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x66, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x98, 0x04, 0x0a, 0x03, 0x41, 0x44, 0x4d, 0x12,
	0x29, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x06, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x12, 0x0e, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x61, 0x64, 0x6d,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x61, 0x64,
	0x6d, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x61,
	0x64, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x61, 0x64, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x77, 0x64, 0x12, 0x15, 0x2e, 0x61, 0x64,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x50, 0x77, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x50, 0x77, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x64, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_adm_proto_rawDescOnce sync.Once
	file_adm_proto_rawDescData = file_adm_proto_rawDesc
)

func file_adm_proto_rawDescGZIP() []byte {
	file_adm_proto_rawDescOnce.Do(func() {
		file_adm_proto_rawDescData = protoimpl.X.CompressGZIP(file_adm_proto_rawDescData)
	})
	return file_adm_proto_rawDescData
}

var file_adm_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_adm_proto_goTypes = []interface{}{
	(*LoginReq)(nil),                     // 0: adm.LoginReq
	(*LoginReply)(nil),                   // 1: adm.LoginReply
	(*LogoutReq)(nil),                    // 2: adm.LogoutReq
	(*LogoutReply)(nil),                  // 3: adm.LogoutReply
	(*ModelPage)(nil),                    // 4: adm.ModelPage
	(*ListUserReq)(nil),                  // 5: adm.ListUserReq
	(*ListUserReply)(nil),                // 6: adm.ListUserReply
	(*UpdateUserReq)(nil),                // 7: adm.UpdateUserReq
	(*UpdateUserReply)(nil),              // 8: adm.UpdateUserReply
	(*DeleteUserReq)(nil),                // 9: adm.DeleteUserReq
	(*DeleteUserReply)(nil),              // 10: adm.DeleteUserReply
	(*AddUserReq)(nil),                   // 11: adm.AddUserReq
	(*AddUserReply)(nil),                 // 12: adm.AddUserReply
	(*ListAuditLogReq)(nil),              // 13: adm.ListAuditLogReq
	(*ListAuditLogReply)(nil),            // 14: adm.ListAuditLogReply
	(*ListMachineNameReq)(nil),           // 15: adm.ListMachineNameReq
	(*ListMachineNameReply)(nil),         // 16: adm.ListMachineNameReply
	(*GetMachinePwdReq)(nil),             // 17: adm.GetMachinePwdReq
	(*GetMachinePwdReply)(nil),           // 18: adm.GetMachinePwdReply
	(*UpdateMachineRemarkReq)(nil),       // 19: adm.UpdateMachineRemarkReq
	(*UpdateMachineRemarkReply)(nil),     // 20: adm.UpdateMachineRemarkReply
	(*ListDomainReq)(nil),                // 21: adm.ListDomainReq
	(*ListDomainReply)(nil),              // 22: adm.ListDomainReply
	(*AddDomainReq)(nil),                 // 23: adm.AddDomainReq
	(*AddDomainReply)(nil),               // 24: adm.AddDomainReply
	(*TestDomainReq)(nil),                // 25: adm.TestDomainReq
	(*TestDomainReply)(nil),              // 26: adm.TestDomainReply
	(*UpdateDomainReq)(nil),              // 27: adm.UpdateDomainReq
	(*UpdateDomainReply)(nil),            // 28: adm.UpdateDomainReply
	(*DeleteDomainReq)(nil),              // 29: adm.DeleteDomainReq
	(*DeleteDomainReply)(nil),            // 30: adm.DeleteDomainReply
	(*ChangeDailTimeReq)(nil),            // 31: adm.ChangeDailTimeReq
	(*ChangeDailTimeReply)(nil),          // 32: adm.ChangeDailTimeReply
	(*CheckMfaReq)(nil),                  // 33: adm.CheckMfaReq
	(*CheckMfaReply)(nil),                // 34: adm.CheckMfaReply
	(*EnableMfaReq)(nil),                 // 35: adm.EnableMfaReq
	(*EnableMfaReply)(nil),               // 36: adm.EnableMfaReply
	(*DisableMfaReq)(nil),                // 37: adm.DisableMfaReq
	(*DisableMfaReply)(nil),              // 38: adm.DisableMfaReply
	(*ListUserReply_Details)(nil),        // 39: adm.ListUserReply.Details
	(*ListAuditLogReply_Details)(nil),    // 40: adm.ListAuditLogReply.Details
	(*ListMachineNameReply_Details)(nil), // 41: adm.ListMachineNameReply.Details
	(*ListDomainReply_Details)(nil),      // 42: adm.ListDomainReply.Details
	nil,                                  // 43: adm.ListDomainReply.Details.DomainInfoEntry
}
var file_adm_proto_depIdxs = []int32{
	4,  // 0: adm.ListUserReply.page:type_name -> adm.ModelPage
	39, // 1: adm.ListUserReply.List:type_name -> adm.ListUserReply.Details
	4,  // 2: adm.ListAuditLogReply.page:type_name -> adm.ModelPage
	40, // 3: adm.ListAuditLogReply.List:type_name -> adm.ListAuditLogReply.Details
	41, // 4: adm.ListMachineNameReply.list:type_name -> adm.ListMachineNameReply.Details
	4,  // 5: adm.ListMachineNameReply.page:type_name -> adm.ModelPage
	4,  // 6: adm.ListDomainReply.page:type_name -> adm.ModelPage
	42, // 7: adm.ListDomainReply.List:type_name -> adm.ListDomainReply.Details
	43, // 8: adm.ListDomainReply.Details.domainInfo:type_name -> adm.ListDomainReply.Details.DomainInfoEntry
	0,  // 9: adm.ADM.Login:input_type -> adm.LoginReq
	2,  // 10: adm.ADM.Logout:input_type -> adm.LogoutReq
	5,  // 11: adm.ADM.ListUser:input_type -> adm.ListUserReq
	7,  // 12: adm.ADM.UpdateUser:input_type -> adm.UpdateUserReq
	9,  // 13: adm.ADM.DeleteUser:input_type -> adm.DeleteUserReq
	11, // 14: adm.ADM.AddUser:input_type -> adm.AddUserReq
	15, // 15: adm.ADM.ListMachineName:input_type -> adm.ListMachineNameReq
	17, // 16: adm.ADM.GetMachinePwd:input_type -> adm.GetMachinePwdReq
	19, // 17: adm.ADM.UpdateMachineRemark:input_type -> adm.UpdateMachineRemarkReq
	1,  // 18: adm.ADM.Login:output_type -> adm.LoginReply
	3,  // 19: adm.ADM.Logout:output_type -> adm.LogoutReply
	6,  // 20: adm.ADM.ListUser:output_type -> adm.ListUserReply
	8,  // 21: adm.ADM.UpdateUser:output_type -> adm.UpdateUserReply
	10, // 22: adm.ADM.DeleteUser:output_type -> adm.DeleteUserReply
	12, // 23: adm.ADM.AddUser:output_type -> adm.AddUserReply
	16, // 24: adm.ADM.ListMachineName:output_type -> adm.ListMachineNameReply
	18, // 25: adm.ADM.GetMachinePwd:output_type -> adm.GetMachinePwdReply
	20, // 26: adm.ADM.UpdateMachineRemark:output_type -> adm.UpdateMachineRemarkReply
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_adm_proto_init() }
func file_adm_proto_init() {
	if File_adm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachinePwdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachinePwdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineRemarkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineRemarkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDomainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDomainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDomainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDomainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDailTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDailTimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMfaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMfaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableMfaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableMfaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableMfaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableMfaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReply_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditLogReply_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineNameReply_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adm_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainReply_Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adm_proto_goTypes,
		DependencyIndexes: file_adm_proto_depIdxs,
		MessageInfos:      file_adm_proto_msgTypes,
	}.Build()
	File_adm_proto = out.File
	file_adm_proto_rawDesc = nil
	file_adm_proto_goTypes = nil
	file_adm_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ADMClient is the client API for ADM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ADMClient interface {
	//用户登录及管理
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginReply, error)
	Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutReply, error)
	ListUser(ctx context.Context, in *ListUserReq, opts ...grpc.CallOption) (*ListUserReply, error)
	UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserReply, error)
	DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserReply, error)
	AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserReply, error)
	//储存机器名和历史密码
	ListMachineName(ctx context.Context, in *ListMachineNameReq, opts ...grpc.CallOption) (*ListMachineNameReply, error)
	GetMachinePwd(ctx context.Context, in *GetMachinePwdReq, opts ...grpc.CallOption) (*GetMachinePwdReply, error)
	UpdateMachineRemark(ctx context.Context, in *UpdateMachineRemarkReq, opts ...grpc.CallOption) (*UpdateMachineRemarkReply, error)
}

type aDMClient struct {
	cc grpc.ClientConnInterface
}

func NewADMClient(cc grpc.ClientConnInterface) ADMClient {
	return &aDMClient{cc}
}

func (c *aDMClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) Logout(ctx context.Context, in *LogoutReq, opts ...grpc.CallOption) (*LogoutReply, error) {
	out := new(LogoutReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) ListUser(ctx context.Context, in *ListUserReq, opts ...grpc.CallOption) (*ListUserReply, error) {
	out := new(ListUserReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/ListUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserReply, error) {
	out := new(UpdateUserReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserReply, error) {
	out := new(DeleteUserReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserReply, error) {
	out := new(AddUserReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) ListMachineName(ctx context.Context, in *ListMachineNameReq, opts ...grpc.CallOption) (*ListMachineNameReply, error) {
	out := new(ListMachineNameReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/ListMachineName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) GetMachinePwd(ctx context.Context, in *GetMachinePwdReq, opts ...grpc.CallOption) (*GetMachinePwdReply, error) {
	out := new(GetMachinePwdReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/GetMachinePwd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aDMClient) UpdateMachineRemark(ctx context.Context, in *UpdateMachineRemarkReq, opts ...grpc.CallOption) (*UpdateMachineRemarkReply, error) {
	out := new(UpdateMachineRemarkReply)
	err := c.cc.Invoke(ctx, "/adm.ADM/UpdateMachineRemark", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ADMServer is the server API for ADM service.
type ADMServer interface {
	//用户登录及管理
	Login(context.Context, *LoginReq) (*LoginReply, error)
	Logout(context.Context, *LogoutReq) (*LogoutReply, error)
	ListUser(context.Context, *ListUserReq) (*ListUserReply, error)
	UpdateUser(context.Context, *UpdateUserReq) (*UpdateUserReply, error)
	DeleteUser(context.Context, *DeleteUserReq) (*DeleteUserReply, error)
	AddUser(context.Context, *AddUserReq) (*AddUserReply, error)
	//储存机器名和历史密码
	ListMachineName(context.Context, *ListMachineNameReq) (*ListMachineNameReply, error)
	GetMachinePwd(context.Context, *GetMachinePwdReq) (*GetMachinePwdReply, error)
	UpdateMachineRemark(context.Context, *UpdateMachineRemarkReq) (*UpdateMachineRemarkReply, error)
}

// UnimplementedADMServer can be embedded to have forward compatible implementations.
type UnimplementedADMServer struct {
}

func (*UnimplementedADMServer) Login(context.Context, *LoginReq) (*LoginReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedADMServer) Logout(context.Context, *LogoutReq) (*LogoutReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Logout not implemented")
}
func (*UnimplementedADMServer) ListUser(context.Context, *ListUserReq) (*ListUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUser not implemented")
}
func (*UnimplementedADMServer) UpdateUser(context.Context, *UpdateUserReq) (*UpdateUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedADMServer) DeleteUser(context.Context, *DeleteUserReq) (*DeleteUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedADMServer) AddUser(context.Context, *AddUserReq) (*AddUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedADMServer) ListMachineName(context.Context, *ListMachineNameReq) (*ListMachineNameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMachineName not implemented")
}
func (*UnimplementedADMServer) GetMachinePwd(context.Context, *GetMachinePwdReq) (*GetMachinePwdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMachinePwd not implemented")
}
func (*UnimplementedADMServer) UpdateMachineRemark(context.Context, *UpdateMachineRemarkReq) (*UpdateMachineRemarkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMachineRemark not implemented")
}

func RegisterADMServer(s *grpc.Server, srv ADMServer) {
	s.RegisterService(&_ADM_serviceDesc, srv)
}

func _ADM_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).Logout(ctx, req.(*LogoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_ListUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).ListUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/ListUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).ListUser(ctx, req.(*ListUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).UpdateUser(ctx, req.(*UpdateUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).DeleteUser(ctx, req.(*DeleteUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).AddUser(ctx, req.(*AddUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_ListMachineName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMachineNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).ListMachineName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/ListMachineName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).ListMachineName(ctx, req.(*ListMachineNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_GetMachinePwd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachinePwdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).GetMachinePwd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/GetMachinePwd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).GetMachinePwd(ctx, req.(*GetMachinePwdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ADM_UpdateMachineRemark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMachineRemarkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ADMServer).UpdateMachineRemark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adm.ADM/UpdateMachineRemark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ADMServer).UpdateMachineRemark(ctx, req.(*UpdateMachineRemarkReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ADM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adm.ADM",
	HandlerType: (*ADMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _ADM_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _ADM_Logout_Handler,
		},
		{
			MethodName: "ListUser",
			Handler:    _ADM_ListUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _ADM_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _ADM_DeleteUser_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _ADM_AddUser_Handler,
		},
		{
			MethodName: "ListMachineName",
			Handler:    _ADM_ListMachineName_Handler,
		},
		{
			MethodName: "GetMachinePwd",
			Handler:    _ADM_GetMachinePwd_Handler,
		},
		{
			MethodName: "UpdateMachineRemark",
			Handler:    _ADM_UpdateMachineRemark_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adm.proto",
}
